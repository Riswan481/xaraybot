#!/bin/bash
user=$1
days=$2
Quota=${3:-0}
iplimit=${4:-0}
bug=$5
uuid=$(cat /proc/sys/kernel/random/uuid)
exp=$(date -d "$days days" +"%Y-%m-%d")
source /var/lib/kyt/ipvps.conf
if [[ "$IP" = "" ]]; then
    domain=$(cat /etc/xray/domain)
else
    domain=$IP
fi
sed -i '/#vmess$/a\### '"$user $exp"'\
},{"id": "'""$uuid""'","alterId": '"0"',"email": "'""$user""'"' /etc/xray/config.json
sed -i '/#vmessgrpc$/a\## '"$user $exp"'\
},{"id": "'""$uuid""'","alterId": '"0"',"email": "'""$user""'"' /etc/xray/config.json
if [[ $iplimit -gt 0 ]]; then
    mkdir -p /etc/kyt/limit/vmess/ip
    echo -e "$iplimit" > /etc/kyt/limit/vmess/ip/$user
fi
c=$(echo "${Quota}" | sed 's/[^0-9]*//g')
d=$((${c} * 1024 * 1024 * 1024))
if [[ ${c} != "0" ]]; then
  echo "${d}" >/etc/vmess/${user}
fi
DATADB=$(cat /etc/vmess/.vmess.db | grep "^###" | grep -w "${user}" | awk '{print $2}')
if [[ "${DATADB}" != '' ]]; then
  sed -i "/\b${user}\b/d" /etc/vmess/.vmess.db
fi
echo "### ${user} ${exp} ${uuid} ${Quota} ${iplimit}" >>/etc/vmess/.vmess.db
asu=`cat<<EOF
      {
      "v": "2",
      "ps": "${user}",
      "add": "${bug}",
      "port": "443",
      "id": "${uuid}",
      "aid": "0",
      "net": "ws",
      "path": "/vmess",
      "type": "none",
      "host": "${domain}",
      "tls": "tls"
}
EOF`
vmesslink1="vmess://$(echo $asu | base64 -w 0)"
ask=`cat<<EOF
      {
     "v": "2",
      "ps": "${user}",
      "add": "${bug}",
      "port": "80",
      "id": "${uuid}",
      "aid": "0",
      "net": "ws",
      "path": "/vmess",
      "type": "none",
      "host": "${domain}",
      "tls": "none"
}
EOF`
vmesslink2="vmess://$(echo $ask | base64 -w 0)"
grpc=`cat<<EOF
      {
      "v": "2",
      "ps": "${user}",
      "add": "${bug}",
      "port": "443",
      "id": "${uuid}",
      "aid": "0",
      "net": "grpc",
      "path": "vmess-grpc",
      "type": "none",
      "host": "${domain}",
      "tls": "tls"
}
EOF`
vmesslink3="vmess://$(echo $grpc | base64 -w 0)"
echo "Attempting to restart Xray service..."
systemctl restart xray > /dev/null 2>&1
if systemctl is-active --quiet xray; then
    echo "Xray service restarted successfully and is running."
else
    echo "ERROR: Xray service failed to start or is not active."
    echo "Please check Xray logs for details: journalctl -u xray.service --no-pager -n 50"
    echo "The Xray configuration might be invalid after modification."
fi
systemctl restart nginx > /dev/null 2>&1
service cron restart > /dev/null 2>&1
echo "SUCCESS"
echo "Remarks: ${user}"
echo "Domain: ${domain}"
echo "User Quota: ${Quota} GB"
echo "User IP Limit: ${iplimit} IP"
echo "UUID: ${uuid}"
echo "Expired: ${exp}"
echo "Link TLS: ${vmesslink1}"
echo "Link none TLS: ${vmesslink2}"
echo "Link GRPC: ${vmesslink3}"
